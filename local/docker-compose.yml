version: "3.7"

networks:
    reverse-proxy:
        name: reverse-proxy
    internal:

services:
    db:
        image: postgres:12.3
        restart: always
        volumes:
            - ./volumes/postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SECRET_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB:-nextcloud}
            - POSTGRES_USER=${POSTGRES_USER:-nextcloud}
        networks:
            - internal

    app:
        image: nextcloud:stable-fpm
        restart: always
        volumes:
            - ./.docker/app/conf.d/php.ini:/usr/local/etc/php/conf.d/custom-php.ini
            - ./volumes/nextcloud:/var/www/html
        environment:
            - POSTGRES_DB=db
            - POSTGRES_HOST=${POSTGRES_HOST:-db}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SECRET_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER:-nextcloud}
            - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER:-admin}
            - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD:-admin}
            - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS:-mydomain.coop}
        depends_on:
            - db
        networks:
            - internal

    web:
        container_name: web
        image: nginx:1.18
        restart: always
        volumes:
            - ./.docker/web/nginx.conf:/etc/nginx/nginx.conf
            - ./volumes/nextcloud:/var/www/html:ro
        environment:
            - VIRTUAL_HOST=mydomain.coop
        depends_on:
            - app
            - mkcert
        networks:
            - internal
            - reverse-proxy

    cron:
        image: nextcloud:stable-fpm
        restart: unless-stopped
        volumes:
            - ./.docker/app/conf.d/php.ini:/usr/local/etc/php/conf.d/custom-php.ini
            - ./volumes/nextcloud:/var/www/html
        entrypoint: /cron.sh
        networks:
            - internal

    nginx-proxy:
        container_name: nginx-proxy
        image: jwilder/nginx-proxy
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        volumes:
            - .docker/nginx-proxy/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf
            - .docker/nginx-proxy/conf.d/server_tokens.conf:/etc/nginx/conf.d/server_tokens.conf
            - .docker/nginx-proxy/conf.d/timeout.conf:/etc/nginx/conf.d/timeout.conf
            - ./volumes/nginx/html:/usr/share/nginx/html
            - ./certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - internal
            - reverse-proxy

    mkcert:
        image: aegypius/mkcert-for-nginx-proxy
        restart: unless-stopped
        environment:
            - NGINX_PROXY_CONTAINER=nginx-proxy
        depends_on:
            - nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ~/.mozilla/firefox:/root/.mozilla/firefox:rw
            - ~/.pki/nssdb:/root/.pki/nssdb:rw
            - ${CA_STORE:-/usr/local/share/ca-certificates}:/usr/local/share/ca-certificates
            - ./certs:/app/certs:rw
        networks:
            - internal
